{
  "editable": true,
  "id": 1,
  "links": [
    {
      "icon": "doc",
      "targetBlank": true,
      "title": "Add Prometheus and Grafana services on golang.dk",
      "type": "link",
      "url": "https://www.golang.dk/courses/build-cloud-apps-in-go/add-prometheus-and-grafana-services"
    }
  ],
  "panels": [
    {
      "datasource": "Prometheus",
      "fieldConfig": {
        "defaults": {
          "decimals": 2,
          "min": 0,
          "unit": "reqps"
        }
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 0
      },
      "id": 2,
      "targets": [
        {
          "exemplar": true,
          "expr": "sum by (method, path, code) (\n  rate(app_http_requests_total[$__rate_interval]) > 0\n)",
          "interval": "",
          "legendFormat": "{{method}} {{path}} {{code}}",
          "refId": "A"
        }
      ],
      "title": "Requests",
      "type": "timeseries"
    },
    {
      "color": {
        "cardColor": "#FF9830",
        "colorScale": "sqrt",
        "colorScheme": "interpolateOranges",
        "exponent": 0.5,
        "mode": "opacity"
      },
      "dataFormat": "tsbuckets",
      "datasource": "Prometheus",
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 0
      },
      "id": 4,
      "maxDataPoints": 25,
      "targets": [
        {
          "exemplar": true,
          "expr": "sum(increase(app_http_request_duration_seconds_bucket[$__interval])) by (le)",
          "format": "heatmap",
          "interval": "",
          "legendFormat": "{{le}}",
          "refId": "A"
        }
      ],
      "title": "Request durations",
      "type": "heatmap",
      "yAxis": {
        "decimals": 0,
        "format": "s",
        "logBase": 1
      }
    },
    {
      "datasource": "Prometheus",
      "fieldConfig": {
        "defaults": {
          "decimals": 2,
          "min": 0,
          "unit": "ops"
        }
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 9
      },
      "id": 6,
      "targets": [
        {
          "exemplar": true,
          "expr": "sum by (name, success) (\n  rate(app_jobs_total[$__rate_interval])\n)",
          "interval": "",
          "legendFormat": "{{name}} success:{{success}}",
          "refId": "A"
        }
      ],
      "title": "Jobs",
      "type": "timeseries"
    },
    {
      "datasource": "Prometheus",
      "fieldConfig": {
        "defaults": {
          "decimals": 2,
          "min": 0,
          "unit": "reqps"
        }
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 9
      },
      "id": 8,
      "targets": [
        {
          "exemplar": true,
          "expr": "sum by (success) (\n  rate(app_job_runner_receives_total[$__rate_interval])\n)",
          "interval": "",
          "legendFormat": "success:{{success}}",
          "refId": "A"
        }
      ],
      "title": "Job runner",
      "type": "timeseries"
    },
    {
      "datasource": "Prometheus",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 17
      },
      "id": 10,
      "options": {
        "tooltip": {
          "mode": "multi"
        }
      },
      "targets": [
        {
          "exemplar": true,
          "expr": "sum(go_sql_max_open_connections)",
          "interval": "",
          "legendFormat": "",
          "refId": "A"
        },
        {
          "exemplar": true,
          "expr": "sum(go_sql_open_connections)",
          "hide": false,
          "interval": "",
          "legendFormat": "",
          "refId": "B"
        },
        {
          "exemplar": true,
          "expr": "sum(go_sql_idle_connections)",
          "hide": false,
          "interval": "",
          "legendFormat": "",
          "refId": "C"
        },
        {
          "exemplar": true,
          "expr": "sum(go_sql_in_use_connections)",
          "hide": false,
          "interval": "",
          "legendFormat": "",
          "refId": "D"
        },
        {
          "exemplar": true,
          "expr": "sum(increase(go_sql_wait_count_total[$__rate_interval]))",
          "hide": false,
          "interval": "",
          "legendFormat": "",
          "refId": "E"
        }
      ],
      "title": "Database",
      "type": "timeseries"
    }
  ],
  "refresh": "15s",
  "schemaVersion": 31,
  "style": "dark",
  "time": {
    "from": "now-1h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "15s",
      "30s",
      "1m"
    ]
  },
  "title": "Canvas",
  "uid": "canvas",
  "version": 1
}
